/*apical trunk list: 0(41.50)-2(94.47)-14(122.82)-28(151.46)-30(179.70)-32(195.53)-40(201.79)-
	-44(227.96)-52(254.45)-60(262.17)-66(268.27)-72(283.71)-74(311.14)-78(343.59)*/

load_file("pre_load_files.hoc")

cvode.active(0)
dt=0.1
tstop=100

objectvar b, ampa, nmda, gabaa, gabab

objref stim, stim_gaba, stim_glut

access soma
	distance()
	
    stim = new IClamp(0.5)
    stim.del = 1000
    stim.dur = 2
    stim.amp = 1.5
	
	stim_gaba = new NetStim(0.5)
	stim_gaba.number=1
	stim_glut = new NetStim(0.5)
	stim_glut.number=1

proc step() {	local i
	fadvance()
		if(ngraph!=0) {
			for i=0, ngraph-1{
				g[i].plot(t)
				g[i].flush()
				doNotify()
			}
		}
}

proc run() { local j
	init()
	if(ngraph!=0) {
		for j=0, ngraph-1{
				g[j].begin()
		}
	}	
	while(t<tstop) {		
	step()}	
}

objref savdata, recv
recv=new Vector()
recv.record(&soma.v(0))

n=50			// E-I-SUM number
objref r_ampa, r_gaba, spk, trace
double peak_point[n], ampa_gm[n]
double EPSP[n], IPSP[n], SUM[n]
strdef source_path, target_path

proc main() { local i, j, m

	savdata = new File()
	savdata.wopen(target_path)
	ropen(source_path)
	
      	I_loc = fscan()  E_loc = fscan()      
	gaba_gstart=fscan()	gaba_gend=fscan()
	ampa_gstart=fscan()	ampa_gend=fscan()
	
//print I_loc,  E_loc, gaba_gstart,	gaba_gend, ampa_gstart,	ampa_gend

 dend[I_loc] {
 
	print distance(0.5)
	I_dist=distance(0.5)
	
	gabaa= new GABAa()
	gabab= new GABAb()
	gabaa.loc(0.5)
	gabab.loc(0.5)
	setpointer gabaa.pre, stim_gaba.y	// assign presynaptic compartment
	setpointer gabab.pre, stim_gaba.y

 }


 dend[E_loc] {
 
	print distance(0.5)
	printf("\n")
	E_dist=distance(0.5)
    	
	ampa = new AMPA()
	nmda = new NMDA()
	ampa.loc(0.5)
	nmda.loc(0.5)
	setpointer ampa.pre, stim_glut.y	// assign presynaptic compartment
	setpointer nmda.pre, stim_glut.y	
				
 	if(!Block_NMDA_Flag){
 	 		nmda_ampa_ratio = 0.6/(1+E_dist/300)
 	}else{
 	 		nmda_ampa_ratio = 0.1*0.6/(1+E_dist/300)
 	}
// 	print "nmda_ampa_ratio = ", nmda_ampa_ratio	
	
 }	
  	
 	r_gaba = new Random(1)       r_ampa = new Random(5)
	r_gaba.uniform(gaba_gstart, gaba_gend) 		r_ampa.uniform(ampa_gstart, ampa_gend) 
	
	for i=0, n-1{
	      gabaa_gm = r_gaba.repick() 
	      ampa_gm  = r_ampa.repick() 	
	      
	      
// spike record //
	stim.del = 10 
	Delt = 3
	stim_gaba.start=1000
	stim_glut.start=1000
	run()
	spk = recv.c	
		  	
	      
// EPSP record	//
	stim_gaba.start=1000	
	stim_glut.start = stim.del+Delt
	ampa.gmax	= ampa_gm
	nmda.gmax = ampa.gmax*nmda_ampa_ratio
	run()	
	trace = recv.c.sub(spk)
	EPSP[i]=find_peak(trace)	
	peak_point[i]=flag
		
// IPSP record	//	
	stim_gaba.start = stim.del+Delt
	stim_glut.start = 1000				
    	gabaa.gmax=	gabaa_gm
      	gabab.gmax=gabaa.gmax*gabab_gabaa_ratio                   
    	run()	
    	trace = recv.c.sub(spk)
    	IPSP[i]= trace.x(peak_point[i])	                                                    
    	
// SUM record	//
  	stim_gaba.start = stim.del+Delt
	stim_glut.start = stim.del+Delt		
    	run()	
    	trace = recv.c.sub(spk)
    	SUM[i]= trace.x(peak_point[i])	   
  savdata.printf("%.4f\t%.4f\t%.4f\t%.4f\n",EPSP[i], -IPSP[i], SUM[i], -(EPSP[i]+IPSP[i]-SUM[i])/IPSP[i])   		                                                 
	}

ropen()    		                                       
savdata.close()                                             
print "Done!\n"                     

}

addgraph("soma.v(0)", -75, -55)
proc Normal(){

		sprint(source_path, "%s", "D:/DATA/source.dat")
		sprint(target_path, "%s", "D:/DATA/target3ms.dat")
	  
		main()
}		
	
Normal()


